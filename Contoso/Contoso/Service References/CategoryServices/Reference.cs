//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Contoso.CategoryServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CategoryServices.ICategoryService")]
    public interface ICategoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/GetCategoryByName", ReplyAction="http://tempuri.org/ICategoryService/GetCategoryByNameResponse")]
        DataModel.CategoryDetail[] GetCategoryByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/GetCategoryByName", ReplyAction="http://tempuri.org/ICategoryService/GetCategoryByNameResponse")]
        System.Threading.Tasks.Task<DataModel.CategoryDetail[]> GetCategoryByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/DelCategory", ReplyAction="http://tempuri.org/ICategoryService/DelCategoryResponse")]
        void DelCategory(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/DelCategory", ReplyAction="http://tempuri.org/ICategoryService/DelCategoryResponse")]
        System.Threading.Tasks.Task DelCategoryAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/UpdateCategory", ReplyAction="http://tempuri.org/ICategoryService/UpdateCategoryResponse")]
        bool UpdateCategory(DataModel.CategoryDetail cd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/UpdateCategory", ReplyAction="http://tempuri.org/ICategoryService/UpdateCategoryResponse")]
        System.Threading.Tasks.Task<bool> UpdateCategoryAsync(DataModel.CategoryDetail cd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/AddCategory", ReplyAction="http://tempuri.org/ICategoryService/AddCategoryResponse")]
        bool AddCategory(DataModel.CategoryDetail cd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryService/AddCategory", ReplyAction="http://tempuri.org/ICategoryService/AddCategoryResponse")]
        System.Threading.Tasks.Task<bool> AddCategoryAsync(DataModel.CategoryDetail cd);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICategoryServiceChannel : Contoso.CategoryServices.ICategoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CategoryServiceClient : System.ServiceModel.ClientBase<Contoso.CategoryServices.ICategoryService>, Contoso.CategoryServices.ICategoryService {
        
        public CategoryServiceClient() {
        }
        
        public CategoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CategoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DataModel.CategoryDetail[] GetCategoryByName(string name) {
            return base.Channel.GetCategoryByName(name);
        }
        
        public System.Threading.Tasks.Task<DataModel.CategoryDetail[]> GetCategoryByNameAsync(string name) {
            return base.Channel.GetCategoryByNameAsync(name);
        }
        
        public void DelCategory(long id) {
            base.Channel.DelCategory(id);
        }
        
        public System.Threading.Tasks.Task DelCategoryAsync(long id) {
            return base.Channel.DelCategoryAsync(id);
        }
        
        public bool UpdateCategory(DataModel.CategoryDetail cd) {
            return base.Channel.UpdateCategory(cd);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCategoryAsync(DataModel.CategoryDetail cd) {
            return base.Channel.UpdateCategoryAsync(cd);
        }
        
        public bool AddCategory(DataModel.CategoryDetail cd) {
            return base.Channel.AddCategory(cd);
        }
        
        public System.Threading.Tasks.Task<bool> AddCategoryAsync(DataModel.CategoryDetail cd) {
            return base.Channel.AddCategoryAsync(cd);
        }
    }
}
